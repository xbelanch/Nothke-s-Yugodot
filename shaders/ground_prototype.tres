[gd_resource type="VisualShader" load_steps=5 format=2]

[ext_resource path="res://assets/textures/texture_01_red.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=2]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 1, 1, 0 ), 1, Vector3( 100, 100, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 1 )
texture_type = 1

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_5 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:4
	vec3 n_in4p1 = vec3(100.00000, 100.00000, 0.00000);
	vec3 n_out4p0 = n_out3p0 * n_in4p1;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out4p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -457.667, -92.635 )
nodes/fragment/0/position = Vector2( 427.167, -12.3333 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -437.084, 137.323 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -216.416, 11.657 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 84.3335, 11.615 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 0 )
